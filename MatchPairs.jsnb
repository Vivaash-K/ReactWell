{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Memory Pairs Game</title>\n<style>\n  * {\n    box-sizing: border-box;\n  }\n  \n  body {\n    font-family: Arial, sans-serif;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n    background-color: #de770f; /* fallback color */\n    background-image: url('https://i.pinimg.com/736x/71/ea/3f/71ea3ffd08eb0fc79d9a0dcb7bf2387c.jpg'); /* Path to your background image */\n    background-size: cover; /* Ensures the image covers the entire background */\n    background-position: center; /* Centers the image */\n    background-attachment: fixed; /* Keeps the background fixed during scroll */\n  }  \n  \n  #game-container {\n    text-align: center;\n    background-image: url('SpringBG.jpeg'); /* Path to your background image */\n    background-size: cover; /* Ensures the image covers the entire background */\n    background-position: center; /* Centers the image */\n    padding: 20px; /* Optional, to ensure the content is not too close to the edges */\n    border-radius: 10px; /* Optional, for rounded corners */\n  }  \n  \n  .memory-game {\n    display: grid;\n    grid-template-columns: repeat(4, 100px);\n    grid-gap: 10px;\n    margin: 20px auto;\n  }\n  \n  .memory-card {\n    width: 100px;\n    height: 100px;\n    background-color: #2e8b57;\n    border-radius: 8px;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 30px;\n    color: white;\n  }\n  \n  .memory-card.flip {\n    background-color: white;\n    color: #2e8b57;\n  }\n  \n</style>\n</head>\n<body>\n  <div id=\"game-container\">\n    <h1>Memory Pairs</h1>\n    <p id=\"status\">Try to find all pairs!</p>\n    <div id=\"memory-game\" class=\"memory-game\"></div>\n    <button onclick=\"startGame()\">Start New Game</button>\n  </div>\n  <script src=\"script.js\"></script>\n</body>\n</html>\n",
      "status": "",
      "output": "\n\n\n<meta charset=\"UTF-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Memory Pairs Game</title>\n<style>\n  * {\n    box-sizing: border-box;\n  }\n  \n  body {\n    font-family: Arial, sans-serif;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    margin: 0;\n    background-color: #de770f; /* fallback color */\n    background-image: url('https://i.pinimg.com/736x/71/ea/3f/71ea3ffd08eb0fc79d9a0dcb7bf2387c.jpg'); /* Path to your background image */\n    background-size: cover; /* Ensures the image covers the entire background */\n    background-position: center; /* Centers the image */\n    background-attachment: fixed; /* Keeps the background fixed during scroll */\n  }  \n  \n  #game-container {\n    text-align: center;\n    background-image: url('SpringBG.jpeg'); /* Path to your background image */\n    background-size: cover; /* Ensures the image covers the entire background */\n    background-position: center; /* Centers the image */\n    padding: 20px; /* Optional, to ensure the content is not too close to the edges */\n    border-radius: 10px; /* Optional, for rounded corners */\n  }  \n  \n  .memory-game {\n    display: grid;\n    grid-template-columns: repeat(4, 100px);\n    grid-gap: 10px;\n    margin: 20px auto;\n  }\n  \n  .memory-card {\n    width: 100px;\n    height: 100px;\n    background-color: #2e8b57;\n    border-radius: 8px;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 30px;\n    color: white;\n  }\n  \n  .memory-card.flip {\n    background-color: white;\n    color: #2e8b57;\n  }\n  \n</style>\n\n\n  <div id=\"game-container\">\n    <h1>Memory Pairs</h1>\n    <p id=\"status\">Try to find all pairs!</p>\n    <div id=\"memory-game\" class=\"memory-game\"><div class=\"memory-card\" data-color=\"pink\"></div><div class=\"memory-card\" data-color=\"yellow\"></div><div class=\"memory-card\" data-color=\"orange\"></div><div class=\"memory-card\" data-color=\"orange\"></div><div class=\"memory-card\" data-color=\"pink\"></div><div class=\"memory-card\" data-color=\"blue\"></div><div class=\"memory-card\" data-color=\"purple\"></div><div class=\"memory-card\" data-color=\"red\"></div><div class=\"memory-card\" data-color=\"green\"></div><div class=\"memory-card\" data-color=\"yellow\"></div><div class=\"memory-card\" data-color=\"cyan\"></div><div class=\"memory-card\" data-color=\"purple\"></div><div class=\"memory-card\" data-color=\"cyan\"></div><div class=\"memory-card\" data-color=\"blue\"></div><div class=\"memory-card\" data-color=\"green\"></div><div class=\"memory-card\" data-color=\"red\"></div></div>\n    <button onclick=\"startGame()\">Start New Game</button>\n  </div>\n  <script src=\"script.js\"></script>\n\n\n",
      "type": "html"
    },
    {
      "code": "// Variables for game logic\nconst cardColors = [\n    'red', 'blue', 'green', 'orange', \n    'purple', 'yellow', 'pink', 'cyan'\n  ];\n  let cards = [...cardColors, ...cardColors]; // Duplicate colors for pairs\n  let flippedCards = [];\n  let matchedPairs = 0;\n  let moves = 0;\n  \n  // Start the game\n  function startGame() {\n    // Shuffle cards and reset state\n    shuffle(cards);\n    matchedPairs = 0;\n    moves = 0;\n    document.getElementById('status').textContent = \"Try to find all pairs!\";\n    \n    // Clear game board and create cards\n    const gameBoard = document.getElementById('memory-game');\n    gameBoard.innerHTML = '';\n    cards.forEach(color => {\n      const card = document.createElement('div');\n      card.classList.add('memory-card');\n      card.dataset.color = color;\n      card.onclick = () => flipCard(card);\n      gameBoard.appendChild(card);\n    });\n  }\n  \n  // Shuffle function\n  function shuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n  \n  // Flip card logic\n  function flipCard(card) {\n    if (card.classList.contains('flip') || flippedCards.length === 2) return;\n  \n    // Flip the card\n    card.classList.add('flip');\n    card.style.backgroundColor = card.dataset.color;\n    flippedCards.push(card);\n  \n    // Check for match when two cards are flipped\n    if (flippedCards.length === 2) {\n      checkForMatch();\n    }\n  }\n  \n  // Check if two flipped cards match\n  function checkForMatch() {\n    moves++;\n    const [card1, card2] = flippedCards;\n    if (card1.dataset.color === card2.dataset.color) {\n      // Matched pair\n      matchedPairs++;\n      flippedCards = [];\n      if (matchedPairs === cardColors.length) {\n        document.getElementById('status').textContent = `You won in ${moves} moves! ðŸŽ‰`;\n      }\n    } else {\n      // Not a match: flip back after a short delay\n      setTimeout(() => {\n        card1.classList.remove('flip');\n        card2.classList.remove('flip');\n        card1.style.backgroundColor = '#2e8b57';\n        card2.style.backgroundColor = '#2e8b57';\n        flippedCards = [];\n      }, 800);\n    }\n  }\n ",
      "status": "[1]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}